openapi: 3.0.1
info:
  title: CMS CRUD
  description: >-
    This is a sample CRUD API for a generic CMS.
  version: 1.0.0
servers:
  - url: 'http://localhost:8000/'
tags:
  - name: article
    description: Everything concerning articles, comments
  - name: user
    description: Operations about user
paths:
  /category:
    get:
      tags:
        - article
      summary: Get all categories
      operationId: getCategories
      responses:
        '200':
          description: Retrieved categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - article
      summary: Add a category
      operationId: addCategory
      requestBody:
        description: Category object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        '201':
          description: Category added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Invalid object supplied
          content: {}
      security:
        - cms_auth:
            - 'write:article'
  /category/{id}:
    put:
      tags:
        - article
      summary: Modify a category
      operationId: updateCategory
      parameters: 
        - in: path
          required: true
          name: id
          schema:
            type: integer
      requestBody:
        description: Category that is updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Category updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Category not found
        '400':
          description: Invalid object supplied
      security:
        - cms_auth:
            - 'write:article'
    delete:
      tags:
        - article
      summary: Delete a category
      operationId: deleteCategory
      parameters: 
        - in: path
          required: true
          name: id
          schema:
            type: integer
      responses:
        '200':
          description: Category deleted
        '404':
          description: Category not found
      security:
        - cms_auth:
            - 'write:article'
  /article:
    get:
      tags:
        - article
      summary: Get all articles
      operationId: getArticles
      parameters: 
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
      responses:
        '200':
          description: Articles retrieved
        '400':
          description: Invalid ID supplied
          content: {}
    post:
      tags:
        - article
      summary: Add an article
      operationId: addArticle
      requestBody:
        description: Article object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      responses:
        '201':
          description: Article created
        '400':
          description: Invalid object supplied
          content: {}
      security:
        - cms_auth:
            - 'write:article'
            
  /article/{id}:
    put:
      tags:
        - article
      summary: Modify an article
      operationId: updateArticle
      parameters: 
        - in: path
          required: true
          name: id
          schema:
            type: integer
      requestBody:
        description: Article that is updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '200':
          description: Article updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Article not found
        '400':
          description: Invalid object supplied
      security:
        - cms_auth:
            - 'write:article'
    delete:
      tags:
        - article
      summary: Delete an article
      operationId: deleteArticle
      parameters: 
        - in: path
          required: true
          name: id
          schema:
            type: integer
      responses:
        '200':
          description: Article deleted
        '404':
          description: Article not found
      security:
        - cms_auth:
            - 'write:article'
  /user:
    get:
      tags:
        - user
      summary: Get all users
      operationId: getUsers
      parameters: 
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
      responses:
        '200':
          description: Retrieved users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
        - cms_auth:
            - 'write:user'
  /user/{id}:
    put:
      tags:
        - user
      summary: Modify a user
      operationId: updateUser
      parameters: 
        - in: path
          required: true
          name: id
          schema:
            type: integer
      requestBody:
        description: User that is updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '400':
          description: Invalid object supplied
      security:
        - cms_auth:
            - 'write:user'
    delete:
      tags:
        - user
      summary: Delete a user
      operationId: deleteUser
      parameters: 
        - in: path
          required: true
          name: id
          schema:
            type: integer
      responses:
        '200':
          description: User deleted
        '404':
          description: User not found
      security:
        - cms_auth:
            - 'write:user'
components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          type: integer
          format: int64
        category:
          type: integer
          format: int64
        title:
          type: string
        text:
          type: string
        tags:
          type: string
        publishDate:
          type: string
          format: date-time
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        userStatus:
          type: string
    
  securitySchemes:
    cms_auth:
      type: openIdConnect
      openIdConnectUrl: https://accounts.google.com/.well-known/openid-configuration
    api_key:
      type: apiKey
      name: api_key
      in: header
